# 环境变量配置示例
# 
# 本项目支持多环境配置，通过 APP_ENV 环境变量指定运行环境：
# - development: 开发环境（默认），使用 .env.development
# - production: 生产环境，使用 .env.production
#
# 使用方法：
# 1. 复制对应环境的配置文件：
#    - 开发环境：cp .env.example .env.development
#    - 生产环境：cp .env.example .env.production
# 2. 根据实际需求修改配置值
# 3. 启动应用时设置 APP_ENV 环境变量（可选，默认为 development）
#    - Linux/Mac: export APP_ENV=production && python main.py
#    - Windows: set APP_ENV=production && python main.py

# ============================================
# 环境标识
# ============================================
APP_ENV=production

# ============================================
# 服务器配置
# ============================================
# 服务器监听地址
HOST=0.0.0.0

# 服务器监听端口
PORT=8001

# 工作进程数（生产环境建议设置为 CPU 核心数）
WORKERS=1

# ============================================
# 日志配置
# ============================================
# 日志级别：DEBUG, INFO, WARNING, ERROR, CRITICAL
#
# 不同级别的说明：
# - DEBUG: 输出详细的调试日志
#         如果VERBOSE_LOGGING=true，还会启用API文档（/docs、/redoc）和配置端点（/config）
#         包括请求准备、图片处理、响应流程等各个阶段的详细信息
#         适用于：开发环境
#
# - INFO: 输出关键业务日志和访问令牌审计信息（脱敏显示）
#        适用于：生产环境日常运行
#
# - WARNING及以上: 仅输出警告和错误信息
#                 适用于：高负载生产环境或测试环境
LOG_LEVEL=INFO

# 详细日志模式：true/false
#
# - false（默认）：简洁模式，适用于生产环境和Docker容器
#   * 简短时间格式（HH:mm:ss）
#   * 不显示行号
#   * 不启用backtrace和diagnose
#   * 彩色输出，清晰易读
#   示例：05:42:30 | INFO  | z2p_svc.app:create_app - Application created
#
# - true：详细模式，适用于开发环境调试
#   * 完整时间格式（YYYY-MM-DD HH:mm:ss.SSS）
#   * 显示行号
#   * 启用backtrace和diagnose（错误时显示完整堆栈）
#   * 彩色输出
#   * 同时启用API文档（/docs、/redoc）和配置端点（/config）
#   示例：2025-10-15 13:42:30.123 | INFO  | z2p_svc.app:create_app:107 - Application created
#
# 注意：当LOG_LEVEL=DEBUG时，如果未明确设置VERBOSE_LOGGING，会自动启用详细模式
VERBOSE_LOGGING=false

# ============================================
# 代理配置
# ============================================
# 代理目标URL
PROXY_URL=https://chat.z.ai

# ============================================
# Mihomo 代理切换配置
# ============================================
# Mihomo API地址（例如：http://127.0.0.1:9090）
MIHOMO_API_URL=

# Mihomo API密钥（如果设置了external-controller-secret）
MIHOMO_API_SECRET=

# Mihomo代理组名称（支持Selector和LoadBalance类型，默认：ZhipuAI）
MIHOMO_PROXY_GROUP=ZhipuAI

# 是否启用Mihomo代理自动切换（遇到阿里云拦截时）
ENABLE_MIHOMO_SWITCH=false